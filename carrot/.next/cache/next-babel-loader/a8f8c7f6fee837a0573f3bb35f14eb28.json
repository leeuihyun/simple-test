{"ast":null,"code":"import { createWrapper } from \"next-redux-wrapper\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"../reducers\"; //import rootSaga from \"../sagas\";\n//import createSagaMiddleware from \"@redux-saga/core\";\n\nconst configureStore = () => {\n  //const sagaMiddleware = createSagaMiddleware();\n  const middleware = [];\n  const enhancer = false ? compose(applyMiddleware(...middleware)) : composeWithDevTools(applyMiddleware(...middleware));\n  const store = createStore(rootReducer, enhancer); //store.sagaTask = sagaMiddleware.run(rootSaga);\n\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["/Users/iuihyeon/Desktop/reactfile/test/simple-test/carrot/store/configureStore.js"],"names":["createWrapper","createStore","applyMiddleware","compose","composeWithDevTools","rootReducer","configureStore","middleware","enhancer","store","wrapper","debug"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,WAAP,MAAwB,aAAxB,C,CACA;AACA;;AAEA,MAAMC,cAAc,GAAG,MAAM;AACzB;AACA,QAAMC,UAAU,GAAG,EAAnB;AAEA,QAAMC,QAAQ,GACV,QACML,OAAO,CAACD,eAAe,CAAC,GAAGK,UAAJ,CAAhB,CADb,GAEMH,mBAAmB,CAACF,eAAe,CAAC,GAAGK,UAAJ,CAAhB,CAH7B;AAIA,QAAME,KAAK,GAAGR,WAAW,CAACI,WAAD,EAAcG,QAAd,CAAzB,CARyB,CASzB;;AACA,SAAOC,KAAP;AACH,CAXD;;AAaA,MAAMC,OAAO,GAAGV,aAAa,CAACM,cAAD,EAAiB;AAC1CK,EAAAA,KAAK;AADqC,CAAjB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["import { createWrapper } from \"next-redux-wrapper\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"../reducers\";\n//import rootSaga from \"../sagas\";\n//import createSagaMiddleware from \"@redux-saga/core\";\n\nconst configureStore = () => {\n    //const sagaMiddleware = createSagaMiddleware();\n    const middleware = [];\n\n    const enhancer =\n        process.env.NODE_ENV === \"production\"\n            ? compose(applyMiddleware(...middleware))\n            : composeWithDevTools(applyMiddleware(...middleware));\n    const store = createStore(rootReducer, enhancer);\n    //store.sagaTask = sagaMiddleware.run(rootSaga);\n    return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n    debug: process.env.NODE_ENV === \"development\",\n});\n\nexport default wrapper;\n"]},"metadata":{},"sourceType":"module"}