{"ast":null,"code":"import { createWrapper } from \"next-redux-wrapper\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"../reducers\"; //import rootSaga from \"../sagas\";\n//import createSagaMiddleware from \"@redux-saga/core\";\n\nvar configureStore = function configureStore() {\n  var sagaMiddleware = createSagaMiddleware();\n  var middleware = [sagaMiddleware];\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middleware)) : composeWithDevTools(applyMiddleware.apply(void 0, middleware));\n  var store = createStore(rootReducer, enhancer); //store.sagaTask = sagaMiddleware.run(rootSaga);\n\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["/Users/iuihyeon/Desktop/reactfile/test/simple-test/carrot/store/configureStore.js"],"names":["createWrapper","createStore","applyMiddleware","compose","composeWithDevTools","rootReducer","configureStore","sagaMiddleware","createSagaMiddleware","middleware","enhancer","store","wrapper","debug"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,WAAP,MAAwB,aAAxB,C,CACA;AACA;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzB,MAAMC,cAAc,GAAGC,oBAAoB,EAA3C;AACA,MAAMC,UAAU,GAAG,CAACF,cAAD,CAAnB;AAEA,MAAMG,QAAQ,GACV,QACMP,OAAO,CAACD,eAAe,MAAf,SAAmBO,UAAnB,CAAD,CADb,GAEML,mBAAmB,CAACF,eAAe,MAAf,SAAmBO,UAAnB,CAAD,CAH7B;AAIA,MAAME,KAAK,GAAGV,WAAW,CAACI,WAAD,EAAcK,QAAd,CAAzB,CARyB,CASzB;;AACA,SAAOC,KAAP;AACH,CAXD;;AAaA,IAAMC,OAAO,GAAGZ,aAAa,CAACM,cAAD,EAAiB;AAC1CO,EAAAA,KAAK;AADqC,CAAjB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["import { createWrapper } from \"next-redux-wrapper\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"../reducers\";\n//import rootSaga from \"../sagas\";\n//import createSagaMiddleware from \"@redux-saga/core\";\n\nconst configureStore = () => {\n    const sagaMiddleware = createSagaMiddleware();\n    const middleware = [sagaMiddleware];\n\n    const enhancer =\n        process.env.NODE_ENV === \"production\"\n            ? compose(applyMiddleware(...middleware))\n            : composeWithDevTools(applyMiddleware(...middleware));\n    const store = createStore(rootReducer, enhancer);\n    //store.sagaTask = sagaMiddleware.run(rootSaga);\n    return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n    debug: process.env.NODE_ENV === \"development\",\n});\n\nexport default wrapper;\n"]},"metadata":{},"sourceType":"module"}